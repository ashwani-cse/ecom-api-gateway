server:
  port: ${PORT:8080}
spring:
  application:
    name: ecom-api-gateway
  main:
    web-application-type: reactive
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${TOKEN_ISSUER:http://localhost:8081/oauth2/jwks}
  cloud:
    gateway:
      routes:
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/products/**
#          filters:
#            - name: RequestRateLimiter
#              args:
#                key-resolver: "#{@userKeyResolver}"
#                redis-rate-limiter.replenishRate: 1
#                redis-rate-limiter.burstCapacity: 2
#                redis-rate-limiter.requestedTokens: 1
        - id: user-management-service
          uri: lb://USER-MANAGEMENT-SERVICE
          predicates:
            - Path=/api/v1/users/**
#          filters:
#            - name: RequestRateLimiter
#              args:
#                key-resolver: "#{@userKeyResolver}"
#                redis-rate-limiter.replenishRate: 1
#                redis-rate-limiter.burstCapacity: 2
#                redis-rate-limiter.requestedTokens: 1

eureka:
  client:
    service-url:
      defaultZone: "http://localhost:8088/eureka/"
logging:
  level:
    org:
      springframework:
        security: trace
        web: trace
    root: info
  pattern:
    level: "%5p [ecom-api-gateway] %d{HH:mm:ss.SSS} [%t] %c.class{%L} - %m%n"


